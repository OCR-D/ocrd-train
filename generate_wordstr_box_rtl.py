#!/usr/bin/env python3

import argparse
import io
import os
import shlex
import subprocess
import unicodedata
from PIL import Image

os.environ["OMP_NUM_THREADS"] = "1"

#
# command line arguments
#
arg_parser = argparse.ArgumentParser('''Creates wordstrbox files from text files for RTL languages''')

# Text ground truth
arg_parser.add_argument('-t', '--txt', nargs='?', metavar='TXT', help='Line text (GT)', required=True)

# Image file
arg_parser.add_argument('-i', '--image', nargs='?', metavar='IMAGE', help='Image file', required=True)

args = arg_parser.parse_args()

#
# main
#
imagename = args.image
charboxfilename = imagename + ".box"
wordstrboxfilename = os.path.splitext(imagename)[0]+'.box'

# Generate reversed charboxfile using text2image for RTL languages, the generated tif and box are discarded at end.
shell_command = 'text2image --strip_unrenderable_words=false --fonts_dir=/usr/share/fonts  --font="Arial Unicode MS" --text=' + args.txt  + " --outputbase=" + args.image + " 1>/dev/null 2>&1"
subprocess.run(shlex.split(shell_command)) 

# Get reversed groundtruth text from text2image generated charbox for RTL languages.
# Use emoji "\U0001f600" for substitution to get the space between words.
gtstring = io.StringIO()
with io.open(charboxfilename, "r", encoding='utf-8') as boxfile:
        print(''.join(line.replace("  ","\U0001f600 ").split(' ',1)[0] for line in boxfile if line), file = gtstring)
gt = gtstring.getvalue().replace("\U0001f600"," ").replace("\t","\n")

# Get image size.
width, height = Image.open(imagename).size

# Create WordStr line boxes using the reversed groundtruth text for RTL languages.
boxfile = open(wordstrboxfilename, "w", encoding='utf-8')
line = unicodedata.normalize('NFC', gt.strip())
if line:
    print("WordStr 0 0 %d %d 0 #%s" % (width, height, line), file = boxfile)
    print("\t 0 0 %d %d 0" % (width, height), file = boxfile, end='')

# Remove files generated by text2image.
os.remove(charboxfilename)
os.remove( imagename + ".tif")
